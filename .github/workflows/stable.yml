name: Docker Image and Npm Packages - Publish
on:
  push: 
    tags:
      - v**
      - V**

env:
  DOCKER_ARCHS: linux/amd64,linux/arm64

jobs:
  Publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
          registry-url: https://registry.npmjs.org/

      - name: Install Depedencies
        run: npm install

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  Docker:
    runs-on: ubuntu-latest
    name: Docker Core Image
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.3.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.9.0 
        with:
          username: ${{ secrets.DOCKER_ORG_USER }}
          password: ${{ secrets.DOCKER_ORG_PASS }}

      - name: checkout
        uses: actions/checkout@master

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2.4.0
        with:
          push: true
          file: Dockerfile
          target: bdscore
          tags: |
            bdsmaneger/maneger:latest
            bdsmaneger/maneger:${{ github.run_id }}
          platforms: ${{ env.DOCKER_ARCHS }}

  # Bin Files
  Binarie-Linux-x64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
          registry-url: https://registry.npmjs.org/

      - name: Install Depedencies
        run: npm install

      - name: Build Bin
        run: |
          npm run nexe
          mv -fv BdsManager-bin Linux-Bin

      - uses: actions/github-script@v4.0.2
        id: set-result
        with:
          script: return "${{ github.ref }}".split("refs/tags/").join("")
          result-encoding: string

      - name: Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Bds Maneger Version ${{ env.BDS_VER }}
          tag_name: ${{steps.set-result.outputs.result}}
          files: Linux-Bin*
          body: |
            Binarie Bds Maneger CLI to Linux x64

  Binarie-Macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
          registry-url: https://registry.npmjs.org/

      - name: Install Depedencies
        run: npm install

      - name: Build Bin
        run: |
          npm run nexe
          mv -fv BdsManager-bin Macos-Bin

      - uses: actions/github-script@v4.0.2
        id: set-result
        with:
          script: return "${{ github.ref }}".split("refs/tags/").join("")
          result-encoding: string

      - name: Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Bds Maneger Version ${{ env.BDS_VER }}
          tag_name: ${{steps.set-result.outputs.result}}
          files: Macos-Bin*
          body: |
            Binarie Bds Maneger CLI to MacOS

  Binarie-Win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 15.x
          registry-url: https://registry.npmjs.org/

      - name: Install Depedencies
        run: npm install

      - name: Set up NASM
        uses: ilammy/setup-nasm@v1.2.0

      - name: Build Bin
        run: |
          npm run nexe
          Ren "BdsManager-bin.exe" "Windows-Bin.exe"

      - uses: actions/github-script@v4.0.2
        id: set-result
        with:
          script: return "${{ github.ref }}".split("refs/tags/").join("")
          result-encoding: string

      - name: Releases
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: Bds Maneger Version ${{ env.BDS_VER }}
          tag_name: ${{steps.set-result.outputs.result}}
          files: Windows-Bin*
          body: |
            Binarie to Windows x64